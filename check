# Read ASINs from file
file_path = input("Enter the file path containing ASINs (e.g., input.txt): ").strip()
try:
    with open(file_path, 'r') as f:
        asin_list = [line.strip() for line in f if line.strip()]
except FileNotFoundError:
    print(f"Error: File not found at '{file_path}'. Exiting.")
    driver.quit()
    exit(1)

# List to store the results
results = []
output_file_path = "output.xlsx"  # Output file to store cumulative results

# Function to process an ASIN and fetch data
def process_asin(asin):
    try:
        # Construct URL
        base_url = "https://src-na.corp.amazon.com/procurability/?asin="  # Replace with actual base URL
        full_url = f"{base_url}{asin}&iog=1"

        # Open URL
        driver.get(full_url)

        # Wait for the table to load
        wait.until(EC.presence_of_element_located((By.CLASS_NAME, "text-success")))

        # Find the procurability status
        procurability_element = driver.find_element(By.CLASS_NAME, "text-success")
        procurability_status = procurability_element.text

        # Save the ASIN and procurability status
        print(f"ASIN: {asin} | Procurability: {procurability_status}")
        return {"ASIN": asin, "Procurability": procurability_status}

    except (TimeoutException, NoSuchElementException):
        print(f"Failed to load or fetch data for ASIN: {asin}")
        return {"ASIN": asin, "Procurability": "Error"}

# Process ASINs one at a time
for asin in asin_list:
    result = process_asin(asin)
    results.append(result)

    # Save results to the output Excel file
    df = pd.DataFrame(results)
    try:
        df.to_excel(output_file_path, index=False)
        print(f"Results saved to {output_file_path}")
    except Exception as e:
        print(f"Error saving results: {e}")

# Close the browser
driver.quit()

print("All ASINs processed. Exiting.")
